name: Update Dependencies

on:
  schedule:
    # 每周日凌晨2点运行
    - cron: '0 2 * * 0'
  workflow_dispatch:

env:
  DOTNET_VERSION: '8.0.x'
  SOLUTION_FILE: 'JoyConfig.sln'

jobs:
  update-dependencies:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore ${{ env.SOLUTION_FILE }}

    - name: Check for outdated packages
      id: outdated
      run: |
        $outdated = dotnet list package --outdated --format json | ConvertFrom-Json
        if ($outdated.projects[0].frameworks[0].topLevelPackages.Count -gt 0) {
          echo "has_updates=true" >> $env:GITHUB_OUTPUT
          echo "packages=$($outdated.projects[0].frameworks[0].topLevelPackages | ConvertTo-Json -Compress)" >> $env:GITHUB_OUTPUT
        } else {
          echo "has_updates=false" >> $env:GITHUB_OUTPUT
        }

    - name: Update packages
      if: steps.outdated.outputs.has_updates == 'true'
      run: |
        # 更新所有过时的包
        dotnet restore ${{ env.SOLUTION_FILE }}
        # 获取可更新的包列表
        $packages = dotnet list package --outdated --format json | ConvertFrom-Json
        foreach ($package in $packages.projects[0].frameworks[0].topLevelPackages) {
          if ($package.resolved -ne $package.latest) {
            Write-Host "Updating $($package.name) from $($package.resolved) to $($package.latest)"
            dotnet add package $package.name --version $package.latest
          }
        }

    - name: Build and test
      if: steps.outdated.outputs.has_updates == 'true'
      run: |
        dotnet build ${{ env.SOLUTION_FILE }} --configuration Release
        dotnet test ${{ env.SOLUTION_FILE }} --configuration Release --no-build

    - name: Create Pull Request
      if: steps.outdated.outputs.has_updates == 'true'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update dependencies'
        title: 'chore: update NuGet packages'
        body: |
          ## 📦 Dependency Updates
          
          This PR updates the following NuGet packages to their latest versions:
          
          ${{ steps.outdated.outputs.packages }}
          
          ### Verification
          - [x] All packages updated successfully
          - [x] Build passes
          - [x] Tests pass
          
          > **Note**: This PR was automatically generated by GitHub Actions.
        branch: chore/update-dependencies
        delete-branch: true
        labels: dependencies, automated-pr