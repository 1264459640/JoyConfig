name: Release

on:
  push:
    tags:
      - 'v*'

env:
  DOTNET_VERSION: '8.0.x'
  PROJECT_NAME: 'JoyConfig'
  SOLUTION_FILE: 'JoyConfig.sln'

jobs:
  create-release:
    runs-on: windows-latest
    outputs:
      version: ${{ steps.gitversion.outputs.semVer }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0
      with:
        versionSpec: '5.x'

    - name: Determine Version
      uses: gittools/actions/gitversion/execute@v0
      id: gitversion

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ steps.gitversion.outputs.semVer }}
        body: |
          ## Changes in this Release
          
          ### Features
          - New features and improvements
          
          ### Bug Fixes
          - Fixed various bugs and issues
          
          ### Notes
          This release was automatically generated by GitHub Actions.
          
          ## Downloads
          - **Windows**: Download `JoyConfig-${{ steps.gitversion.outputs.semVer }}-win-x64.zip`
          - **Portable**: Download `JoyConfig-${{ steps.gitversion.outputs.semVer }}-portable.zip`
        draft: false
        prerelease: ${{ contains(steps.gitversion.outputs.semVer, '-') }}

  build-and-upload:
    needs: create-release
    runs-on: windows-latest
    strategy:
      matrix:
        runtime: [win-x64, win-arm64]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0
      with:
        versionSpec: '5.x'

    - name: Determine Version
      uses: gittools/actions/gitversion/execute@v0
      id: gitversion

    - name: Restore dependencies
      run: dotnet restore ${{ env.SOLUTION_FILE }}

    - name: Build application
      run: |
        dotnet build ${{ env.SOLUTION_FILE }} \
          --configuration Release \
          --no-restore \
          -p:Version=${{ steps.gitversion.outputs.semVer }} \
          -p:AssemblyVersion=${{ steps.gitversion.outputs.assemblySemVer }} \
          -p:FileVersion=${{ steps.gitversion.outputs.assemblySemFileVer }} \
          -p:InformationalVersion=${{ steps.gitversion.outputs.informationalVersion }}

    - name: Publish application
      run: |
        dotnet publish src/${{ env.PROJECT_NAME }}/${{ env.PROJECT_NAME }}.csproj \
          --configuration Release \
          --framework net8.0 \
          --runtime ${{ matrix.runtime }} \
          --self-contained true \
          --output publish/${{ matrix.runtime }} \
          -p:PublishSingleFile=true \
          -p:PublishReadyToRun=true \
          -p:Version=${{ steps.gitversion.outputs.semVer }}

    - name: Create ZIP package
      run: |
        $runtime = "${{ matrix.runtime }}"
        $version = "${{ steps.gitversion.outputs.semVer }}"
        $source = "publish/$runtime"
        $dest = "JoyConfig-$version-$runtime.zip"
        
        Compress-Archive -Path "$source\*" -DestinationPath $dest -Force
        
        # Also create a portable version without runtime
        dotnet publish src/${{ env.PROJECT_NAME }}/${{ env.PROJECT_NAME }}.csproj `
          --configuration Release `
          --framework net8.0 `
          --runtime win-x64 `
          --self-contained false `
          --output publish/portable `
          -p:PublishSingleFile=true `
          -p:Version=${{ steps.gitversion.outputs.semVer }}
        
        Compress-Archive -Path "publish\portable\*" -DestinationPath "JoyConfig-$version-portable.zip" -Force

    - name: Upload Release Asset (Runtime)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./JoyConfig-${{ steps.gitversion.outputs.semVer }}-${{ matrix.runtime }}.zip
        asset_name: JoyConfig-${{ steps.gitversion.outputs.semVer }}-${{ matrix.runtime }}.zip
        asset_content_type: application/zip

    - name: Upload Release Asset (Portable)
      if: matrix.runtime == 'win-x64'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./JoyConfig-${{ steps.gitversion.outputs.semVer }}-portable.zip
        asset_name: JoyConfig-${{ steps.gitversion.outputs.semVer }}-portable.zip
        asset_content_type: application/zip